package prova2tri;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.*;

public class ConsultaAPITVMaze {
    public static List<Serie> buscarSeriePorNome(String nome) {
        List<Serie> series = new ArrayList<>();
        try {
            String urlStr = "https://api.tvmaze.com/search/shows?q=" + URLEncoder.encode(nome, "UTF-8");
            URL url = new URL(urlStr);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");

            BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            StringBuilder response = new StringBuilder();
            String inputLine;
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();

            Gson gson = new Gson();
            List<Map<String, Object>> resultados = gson.fromJson(
                response.toString(), new TypeToken<List<Map<String, Object>>>(){}.getType());

            for (Map<String, Object> item : resultados) {
                Map<String, Object> show = (Map<String, Object>) item.get("show");

                String nomeSerie = (String) show.get("name");
                String idioma = (String) show.get("language");
                List<String> generos = (List<String>) show.get("genres");
                double nota = show.get("rating") != null && ((Map<String, Object>) show.get("rating")).get("average") != null
                    ? ((Number)((Map<String, Object>) show.get("rating")).get("average")).doubleValue() : 0.0;
                String status = (String) show.get("status");
                String dataEstreia = (String) show.get("premiered");
                String dataFim = (String) show.get("ended");

                String emissora = "-";
                if (show.get("network") != null) {
                    emissora = (String)((Map<String, Object>) show.get("network")).get("name");
                } else if (show.get("webChannel") != null) {
                    emissora = (String)((Map<String, Object>) show.get("webChannel")).get("name");
                }

                series.add(new Serie(nomeSerie, idioma, generos, nota, status, dataEstreia, dataFim, emissora));
            }

        } catch (Exception e) {
            System.out.println("Erro ao buscar s√©rie: " + e.getMessage());
        }

        return series;
    }
}
